const int pinA = 12;
const int pinB = 8;
const int pinC = 5;
const int pinD = 3;
const int pinE = 2;
const int pinF = 11;
const int pinG = 6;
const int pinDP = 4;
const int pinD1 = 7;
const int pinD2 = 9;
const int pinD3 = 10;
const int pinD4 = 13;

int swState = LOW;
int lastSwState=LOW;
int dpState= LOW;
const int joystickPin = 1;

bool joyMoved = false;
const int segSize = 8;

const int pinX = A0;
const int pinY = A1;
const int noOfDisplays = 4;
const int noOfDigits = 10;
const int minThreshold = 400, maxThreshold = 600;
//int dpState = LOW;
int xValue=0,yValue=0;
int currentNumber = 0;
unsigned long delayCounting = 50;  // incrementing interval
unsigned long lastIncreasing = 0;

// segments array, similar to before
int segments[segSize] = {
  pinA, pinB, pinC, pinD, pinE, pinF, pinG, pinDP
};
// digits array, to switch between them easily
int digits[noOfDisplays] = {
  pinD1, pinD2, pinD3, pinD4
 };   
int UD=0,LR=0;
byte digitMatrix[noOfDigits][segSize - 1] = {
// a  b  c  d  e  f  g
  {1, 1, 1, 1, 1, 1, 0}, // 0
  {0, 1, 1, 0, 0, 0, 0}, // 1
  {1, 1, 0, 1, 1, 0, 1}, // 2
  {1, 1, 1, 1, 0, 0, 1}, // 3
  {0, 1, 1, 0, 0, 1, 1}, // 4
  {1, 0, 1, 1, 0, 1, 1}, // 5
  {1, 0, 1, 1, 1, 1, 1}, // 6
  {1, 1, 1, 0, 0, 0, 0}, // 7
  {1, 1, 1, 1, 1, 1, 1}, // 8
  {1, 1, 1, 1, 0, 1, 1}  // 9
};


void displayNumber(byte digit, byte decimalPoint) {
  for (int i = 0; i < segSize - 1; i++) {
  digitalWrite(segments[i], digitMatrix[digit][i]);
  }
  digitalWrite(segments[segSize - 1], decimalPoint);
}

void showDigit(int num) {
  for (int i = 0; i < noOfDisplays; i++) {
  digitalWrite(digits[i], HIGH);
  }
  digitalWrite(digits[num], LOW);
}
         

void setup() {
  for (int i = 0; i < segSize - 1; i++)
  {
  pinMode(segments[i], OUTPUT);  
  }
  for (int i = 0; i < noOfDisplays; i++)
  {
  pinMode(digits[i], OUTPUT);  
  }
  pinMode(joystickPin,INPUT_PULLUP);
  Serial.begin(9600);
}
void IncreaseCount(){
  int number;
  int digit;
  int lastDigit;
  Serial.println(currentNumber);

  number = currentNumber;
  digit = 0;
 
  while (number != 0) {
  lastDigit = number % 10;  
  showDigit(digit);
  displayNumber(lastDigit, HIGH);
  delay(5);
  digit++;            
  number = number / 10;
  }
  if (millis() - lastIncreasing >= delayCounting) {
  currentNumber = (currentNumber + 1) % 10000;
  lastIncreasing = millis();
  }
}
void DecreaseCount(){
  int number;
  int digit;
  int lastDigit;
  Serial.println(currentNumber);

  number = currentNumber;
  digit = 0;
 
  while (number != 0) {
  lastDigit = number % 10;  
  showDigit(digit);
  displayNumber(lastDigit, HIGH);
  delay(5);
  digit--;            
  number = number / 10;
  }
  if (millis() - lastIncreasing >= delayCounting) {
  currentNumber = (currentNumber + 1) % 10000;
  lastIncreasing = millis();
  }
}

void loop() {
  
  int number;
  int digit;
  int lastDigit;
  Serial.println(currentNumber);

  number = currentNumber;
  digit = 0;
 
  while (number != 0) {
  lastDigit = number % 10;  
  showDigit(digit);
  displayNumber(lastDigit, HIGH);
  delay(10);
  digit++;            
  number = number / 10;
  }
  if (millis() - lastIncreasing >= delayCounting) {
  xValue = analogRead(pinX);  //read u/d from stick
  //yValue = analogRead(A1);
  if(xValue < minThreshold){// && joyMoved == false){
     joyMoved=true;
     if(currentNumber>0){
       currentNumber--;
     }
     else{
      currentNumber=10000;
     }
  }
  if(xValue > maxThreshold){// && joyMoved == false){
    joyMoved=true;
    if(currentNumber<10000){
       currentNumber++;
     }
     else{
      currentNumber=0;
     }
  }
  if(xValue >= minThreshold && xValue <= maxThreshold){
    joyMoved=false;
  }
  swState = digitalRead(joystickPin);
  if(swState!=lastSwState)
  {
    if(swState == LOW)
    {
      dpState = !dpState;
    }
  }
  lastSwState = swState;
  displayNumber(currentNumber,dpState);
  delay(1);
  
  lastIncreasing = millis();
  }
}
